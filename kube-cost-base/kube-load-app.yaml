apiVersion: v1
kind: Namespace
metadata:
  name: loadapp
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: k6-script
  namespace: loadapp
data:
  test.js: |
    import http from 'k6/http';
    import { check, sleep } from 'k6';

    export const options = {
      vus: parseInt(__ENV.VU || "10", 10), // Default to 10 virtual users
      duration: "1h",  // Run for 1 hour (or you can set it to an infinite duration)
    };

    export default function () {
      const res = http.get('https://test.k6.io');
      check(res, { 'status was 200': (r) => r.status === 200 });
      sleep(1);
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: load-app
  namespace: loadapp
spec:
  replicas: 2
  selector:
    matchLabels:
      app: load-app
  template:
    metadata:
      labels:
        app: load-app
    spec:
      containers:
        - name: load-tester
          image: grafana/k6:latest
          args:
            - run
            - /scripts/test.js
          env:
            - name: VU
              value: "10" # Number of virtual users
          resources:
            requests:
              memory: "128Mi"
              cpu: "250m"
            limits:
              memory: "256Mi"
              cpu: "500m"
          volumeMounts:
            - name: k6-script-volume
              mountPath: /scripts
      volumes:
        - name: k6-script-volume
          configMap:
            name: k6-script
---
apiVersion: v1
kind: Service
metadata:
  name: load-app-service
  namespace: loadapp
spec:
  selector:
    app: load-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 6565